<h1>{{ section.settings.title }}</h1>

<div class="collection-page" style="display: flex">
  <div class="collection-discovery" style="flex: 1">
    <select id="sort-by">
      {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}

      {% for option in collection.sort_options %}
        <option
          value="{{ option.value }}"
          {% if option.value == sort_by %}
          selected="selected"
          {% endif %}>
          {{ option.name }}
        </option>
      {% endfor %}
    </select>
    <form>
      {%- for filter in collection.filters -%}
        <details>
          <summary>
            <div>
              <span>{{ filter.label }}</span>
    
              {%- if filter.active_values.size > 0 -%}
                <span>({{ filter.active_values.size }})</span>
              {%- endif -%}
            </div>
          </summary>
    
          <div>
            <div>
              <p>{{ filter.active_values.size }} selected</p>
              {%- if filter.active_values.size > 0 -%}
                <p><a href="{{ filter.url_to_remove }}">Reset</a></p>
              {%- endif -%}
            </div>
            {%- case filter.type -%}
              {%- when 'boolean' -%}
                <ul>
                    <li>
                      <label for="Filter-{{ filter.param_name }}-{{ filter.true_value.value }}">
                      <input type="checkbox"
                        name="{{ filter.param_name }}"
                        value="{{ filter.true_value.value }}"
                        id="Filter-{{ filter.param_name }}"
                        {% if filter.true_value.active -%}checked{%- endif %}
                        {% if filter.true_value.count == 0 and filter.true_value.active == false -%}disabled{%- endif -%}
                      >{{ filter.true_value.label }}</label>
                    </li>
                    <li>
                      <label for="Filter-{{ filter.param_name }}-{{ filter.false_value.value }}">
                      <input type="checkbox"
                        name="{{ filter.param_name }}"
                        value="{{ filter.false_value.value }}"
                        id="Filter-{{ filter.param_name }}"
                        {% if filter.false_value.active -%}checked{%- endif %}
                        {% if filter.false_value.count == 0 and filter.false_value.active == false -%}disabled{%- endif %}
                      >{{ filter.false_value.label }}</label>
                    </li>
                </ul>
    
                <div>
                  <input type="submit" value="Apply">
                </div>
              {%- when 'list' -%}
                <ul>
                  {%- for filter_value in filter.values -%}
                    <li>
                      <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}">
                      <input type="checkbox"
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value }}"
                        id="Filter-{{ filter.param_name }}-{{ forloop.index }}"
                        {% if filter_value.active -%}checked{%- endif %}
                        {% if filter_value.count == 0 and filter_value.active == false -%}disabled{%- endif %}
                      >
                        <span>
                          {%- case filter_value.display.type -%}
                            {%- when 'colors' -%}
                              {% liquid
                                assign size_limit = filter_value.display.value.size | at_most: 4
                                assign rotation = '0deg'
                                if size_limit == 2
                                  assign rotation = '45deg'
                                endif
    
                                assign angle_increment = 360 | divided_by: size_limit
                                assign angle = 0
                              %}
                              {%- capture conic_gradient -%}
                                {%- for color in filter_value.display.value limit: size_limit -%}
                                  {{ color }} {{ angle }}deg{%- assign angle = angle | plus: angle_increment %} {{ angle }}deg{%- unless forloop.last %}, {%- endunless -%}
                                {%- endfor -%}
                              {%- endcapture -%}
                              <span style="
                                width: 25px;
                                height: 25px;
                                border-radius: 50%;
                                display: flex;
                                justify-content: center;
                                align-items: center;
                                background: conic-gradient({{ conic_gradient }}); transform: rotateZ({{ rotation }});
                              "></span>
                            {%- when 'image' -%}
                              {{
                                filter_value.display.value
                                | image_url: width: 25
                                | image_tag: alt: filter_value.display.value.alt
                              }}
                            {%- else -%}
                              <span class="visual-display__child"></span>
                          {%- endcase -%}
                        </span>
                        {{ filter_value.label }}
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>
    
                <div>
                  <input type="submit" value="Apply">
                </div>
              {%- when 'price_range' -%}
                <div class="filter-group-display__price-range">
                  <div class="filter-group-display__price-range-from">
                    <span>{{ cart.currency.symbol }}</span>
    
                    <input name="{{ filter.min_value.param_name }}"
                      id="Filter-{{ filter.min_value.param_name }}"
                      {% if filter.min_value.value -%}
                        value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                      {%- endif %}
                      type="number"
                      placeholder="0"
                      min="0"
                      max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                    >
    
                    <label for="Filter-{{ filter.min_value.param_name }}">From</label>
                  </div>
                  <div class="filter-group-display__price-range-to">
                    <span>{{ cart.currency.symbol }}</span>
    
                    <input name="{{ filter.max_value.param_name }}"
                      id="Filter-{{ filter.max_value.param_name }}"
                      {% if filter.max_value.value -%}
                        value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                      {%- endif %}
                      type="number"
                      placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                      min="0"
                      max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                    >
    
                    <label for="Filter-{{ filter.max_value.param_name }}">To</label>
                  </div>
                </div>
    
                <div class="filter-group-display__submit">
                  <input type="submit" value="Apply">
                </div>
            {%- endcase -%}
          </div>
        </details>
      {%- endfor -%}
    
      <div>
        <p><a href="{{ collection.url }}?sort_by={{ collection.sort_by }}">Clear all</a></p>
    
        {%- for filter in collection.filters -%}
          {%- if filter.type == "price_range" -%}
            {%- if filter.min_value.value != nil or filter.max_value.value != nil -%}
              <p>
                <a href="{{ filter.url_to_remove }}">
                  {%- assign min_value = filter.min_value.value | default: 0 -%}
                  {%- assign max_value = filter.max_value.value | default: filter.range_max -%}
                  {{ min_value | money }} - {{ max_value | money }} X
                </a>
              </p>
            {%- endif -%}
          {%- else -%}
            {%- for filter_value in filter.active_values -%}
              <p>
                <a href="{{ filter_value.url_to_remove }}">
                  {{ filter.label }}: {{ filter_value.label }} X
                </a>
              </p>
            {%- endfor -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </form>
    <div class="test">
        Test
    </div>
  </div>
  <div class="collection-products" style="flex: 4">
    {% paginate collection.products by section.settings.product_per_page %}
      <div class="collection-product">
        {% for product in collection.products %}
          {% render 'product', product: product %}
        {% endfor %}
      </div>
      <div id="pagination" style="display: flex; justify-content: space-around">
        {{ paginate | default_pagination }}
      </div>
    {% endpaginate %}
  </div>
</div>

<script>
  var test = document.querySelector('.test')
  
  test.addEventListener('click', () => {
    axios.get('/collections/all?filter.v.availability=1')
    .then((result) => {
      console.log(result)
    }).catch((err) => {
      console.err(err)
    });
  })
</script>

<script>
  Shopify.queryParams = {};
  
  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');
  
    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');
  
      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }
  
  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;
  
    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>

{% schema %}
  {
    "name": "collection-section",
    "settings": [
      {
        "id": "title",
        "label": "Title",
        "type": "text",
        "default": "{{ collection.title }}"
      }, {
        "id": "product_per_page",
        "type": "range",
        "label": "Product per page",
        "min": 4,
        "max": 20,
        "step": 4,
        "default": 12
      }, {
        "id": "product_per_line",
        "type": "range",
        "label": "Product per line",
        "min": 1,
        "max": 6,
        "default": 4
      }
    ]
  }
{% endschema %}