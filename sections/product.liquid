{% stylesheet %}
  .section-product {
    display: block;
  }

{% endstylesheet %}

<div class="section-product">

  <div class="product-img_div">
    {% unless product.selected_or_first_available_variant.featured_image == null %}
      <img
        class="product-image"
        src="{{product.selected_or_first_available_variant.featured_image | image_url}}"
        alt=""
        width="500px"
        height="500px">

    {% else %}
      <img
        class="product-image"
        src="{{product.featured_image | image_url}}"
        alt=""
        width="500px"
        height="500px">
    {% endunless %}
    <div class="product-images" style="overflow: auto; padding: 10px;">
      {% for block in section.blocks %}
        {% case block.type %}
          {% when "image" %}
            {% comment %} <div class="slide" {{ block.shopify_attributes }}> {% endcomment %}
            {{ block.settings.image | image_url: width: 150 | image_tag: height: 150 }}
          {% comment %} </div> {% endcomment %}
            {% else %}

        {% endcase %}
      {% endfor %}
    </div>
  </div>

  <script>
          var productImage = document.querySelector('.product-img_div')
          var currentIndex = 0
          
          productImage.addEventListener('click', () => {
      var images = {{ product.images | json }}
      var imgTag = document.querySelector('.product-image')
          
      currentIndex = (currentIndex + 1) % images.length;
          
      imgTag.src = images[currentIndex]
          })
  </script>

  <div class="product-info">
    <div class="product-title">{{ product.title | upcase }}</div>
    <div class="product-description">{{ product.description }}</div>
    <div class="product-price">
      <span class="money" style="text-decoration: line-through;">{{ product.compare_at_price | money }}</span>
      <span class="money">{{ product.selected_or_first_available_variant.price | money }}</span>
    </div>

    {% assign available = product.selected_or_first_available_variant.available %}

    {% form 'product'
      , product %}

      <input
        id="variant-id"
        type="hidden"
        name="id"
        value="{{product.selected_or_first_available_variant.id}}">

      {% if product.variants.size > 1 %}
        <div class="product-option">
          {% for option in product.options_with_values %}
            <div>
              <fieldset style="border-radius: 10px; display: inline-block;">
                <legend>{{ option.name }}</legend>

                {% for value in option.values %}
                  <input
                    {% if option.selected_value == value %}
                    checked
                    {% endif %}
                    type="radio"
                    value="{{value}}"
                    name="{{option.name}}"
                    id="{{option.name | handleize}}-{{value | handleize}}">
                  <label for="{{option.name | handleize}}-{{value | handleize}}">{{ value.name }}</label>
                {% endfor %}
              </fieldset>
            </div>
          {% endfor %}
        </div>
      {% endif %}
      <input
        id="product-quantity"
        type="number"
        name="quantity"
        min="1"
        value="1"
        style="margin: 2px; padding: 10px; font-size: 20px; border-radius: 10px; border: 1px solid #c0c0c0">

      <div class="button-add_to_cart">

        <button
          id="button-add_to_cart"
          type="submit"
          style="background-color: #000000; color: #fff; font-size: 30px; padding: 15px; margin: 2px; border-radius: 10px;"
          {% unless available %}
          disabled
          {% endunless %}>
          {% if available %}
            {{ "general.add_to_cart" | t }}
          {% else %}
            {{ "general.out_of_stock" | t }}
          {% endif %}
        </button>
      </div>
    {% endform %}

    <div class="product-out_of_stock">
      {% unless available %}
        {% form 'contact' %}
          {{ form.errors | default_errors }}

          <div class="email">
            <label for="email">Email</label>
            <input
              class="input-email"
              type="email"
              name="contact[email]"
              id="email" />
          </div>

          <div class="submit">
            <input
              type="submit"
              value="Notify me when back in stock"
              id="input-send_mail" />
          </div>
        {% endform %}

      {% endunless %}
    </div>
  </div>
</div>
<script>
      var product = {{product | json}}
  
      console.log(product)
      document.querySelectorAll('.product-option input[type="radio"]').forEach(radio => {
        radio.addEventListener('change', () => {
          var selectedOption = []
          
          document.querySelectorAll('.product-option input[type="radio"]:checked').forEach(check => {
            selectedOption.push(check.value)
          })
          
          var matchedVariant = product.variants.find(variant => {
            var pass = true
          
            for(var i = 0; i < selectedOption.length; i++){
              if(selectedOption.indexOf(variant.options[i]) === -1){
                pass = false
                break
              }    
            }
            return pass
          })
          
          document.querySelector("#variant-id").value = matchedVariant.id
          
          var url = new URL(document.location.href)
          url.searchParams.set('variant', matchedVariant.id)
          
          window.history.replaceState(null, null, url.toString())
          var formatMoney = "{{shop.money_format | strip_html}}"
          
          document.querySelector('.product-price').innerHTML = `<span class='money'>${Shopify.formatMoney(matchedVariant.price, formatMoney)}</span>` 
          
          document.querySelector('.product-image').setAttribute('src', matchedVariant.featured_image.src)
          
          var buttonAddToCart = document.querySelector('#button-add_to_cart')
          
          var formOutOfStok = document.querySelector('.product-out_of_stock')
          if(matchedVariant.available){
            buttonAddToCart.textContent = "{{'general.add_to_cart' | t}}"
            buttonAddToCart.disabled = false
            formOutOfStok.innerHTML = ''
          }
          else{
            formOutOfStok.innerHTML = `
              <form action='/contact#contact_form', method='post'>
                <input type="hidden" name="form_type" value="contact" />
                <input type="hidden" name="utf8" value="âœ“" />
                <div class="email">
                  <input
                    class="input-email"
                    type="email"
                    name="contact[email]"
                    placeholder='Enter your email ...'
                    id="email" />
                </div>
        
                <div class="submit">
                  <input
                    class='input-send_mail'
                    type="submit"
                    value="Notify me when back in stock"
                    id="input-send_mail" />
                </div>
              </form>
            `
            buttonAddToCart.textContent = "{{'general.out_of_stock' | t}}"
            buttonAddToCart.disabled = true
          }
        })
    })
    
    var buttonAddToCart = document.querySelector('#button-add_to_cart')
    buttonAddToCart.addEventListener('click', addToCart)
      
    function addToCart(e) {
      e.preventDefault()
        
      var id = document.querySelector('#variant-id').value
      var quantity = document.querySelector('#product-quantity').value
        
      axios.post('/cart/add', {
          id,
          quantity
      })
      .then((value) => {
        axios.get('/cart.js')
        .then(value => {
          var cart = value.data
          var contentCart = document.querySelector('.cart-content')
        
          var cartDrawer = document.getElementById("cart-drawer")
          var cartOverlay = document.getElementById('cart-overlay');
          
          cartDrawer.classList.toggle('open');
          cartOverlay.classList.toggle('open');
        
          // var routeCheckout = {{ routes.cart_url | json }}
          // console.log(routeCheckout)
          var stringHTML = '<form action="/cart" method="post">'
          stringHTML += '<div class="cart-drawer-product">'
        
          cart.items.forEach(item =>{
            var itemHtml = `<div class="product-grid">
                <img src=${item.image} width='100px' height='100px'>
                <div class="item-title">${item.title}</div>
                <div class="item-price"><span class='money'>${Shopify.formatMoney(item.price)}</span></div>
                <input
                  type="number"
                  class="item-quantity"
                  value=${item.quantity}
                  onchange="updateProductQuantity(this, ${item.id})">
              </div>`
        
            stringHTML += itemHtml
          })
        
          stringHTML += `
          </div>
          <hr>
          <div class="cart-total">Total price: <span class='money'>${Shopify.formatMoney(cart.total_price)}</span></div>
          <input
            type="submit"
            name="checkout"
            value="Checkout">
          </form>`
        
          contentCart.innerHTML = stringHTML
        })
      })
      .catch(error => {
        console.log(error)
      })
    }
</script>

{% schema %}
  {
    "name": "product",
    "settings": [
      {
        "id": "product-name",
        "type": "text",
        "label": "Product's name"
      }, {
        "id": "product-price",
        "type": "number",
        "label": "Product's price"
      }
    ],
    "presets": [
      {
        "name": "product"
      }
    ],
    "blocks": [
      {
        "type": "image",
        "name": "image block",
        "settings": [
          {
            "type": "image_picker",
            "label": "Your image",
            "id": "image"
          }
        ]
      }
    ]
  }
{% endschema %}