{{ 'section-product.css' | asset_url | stylesheet_tag }}

<div class="section-product">

  <div>
    {% unless product.selected_or_first_available_variant.featured_image == null %}
      <img
        class="product-image"
        src="{{product.selected_or_first_available_variant.featured_image | image_url}}"
        alt=""
        width="500px"
        height="500px">

    {% else %}
      <img
        class="product-image"
        src="{{product.featured_image | image_url}}"
        alt=""
        width="500px"
        height="500px">
    {% endunless %}
  </div>

  <div class="product-info">
    <div class="product-title">{{ product.title | upcase }}</div>
    <div class="product-description">{{ product.description }}</div>
    <div class="product-price">
      <span>{{ product.selected_or_first_available_variant.compare_at_price }}</span>
      <span>{{ product.selected_or_first_available_variant.price | money }}</span>
    </div>

    {% form 'product'
      , product %}

      <input
        id="variant-id"
        type="hidden"
        name="id"
        value="{{product.selected_or_first_available_variant.id}}">

      {% if product.variants.size > 1 %}
        <div class="product-option">
          {% for option in product.options_with_values %}
            <fieldset style="border-radius: 10px;">
              <legend>{{ option.name }}</legend>

              {% for value in option.values %}
                <input
                  {% if option.selected_value == value %}
                  checked
                  {% endif %}
                  type="radio"
                  value="{{value}}"
                  name="{{option.name}}"
                  id="{{option.name | handleize}}-{{value | handleize}}">
                <label for="{{option.name | handleize}}-{{value | handleize}}">{{ value.name }}</label>
              {% endfor %}
            </fieldset>
          {% endfor %}
        </div>
      {% endif %}
      <input
        id="product-quantity"
        type="number"
        name="quantity"
        min="1"
        value="1"
        style="margin: 2px; padding: 10px; font-size: 20px; border-radius: 10px">

      <div class="button-add_to_cart">
        <button
          id="button-add_to_cart"
          type="submit"
          style="color: black; font-size: 30px; border: 2px solid; padding: 10px; margin: 2px; border-radius: 10px;"
          {% unless product.selected_or_first_available_variant.available %}
          disabled
          {% endunless %}>
          {% if product.selected_or_first_available_variant.available %}
            {{ "general.add_to_cart" | t }}
          {% else %}
            {{ "general.out_of_stock" | t }}
          {% endif %}
        </button>
      </div>
    {% endform %}
  </div>
</div>

<script>
  var product = {{product |  json}}
  
  document.querySelectorAll('.product-option input[type="radio"]').forEach(radio => {
    radio.addEventListener('change', () => {
      var selectedOption = []
  
      document.querySelectorAll('.product-option input[type="radio"]:checked').forEach(check => {
        selectedOption.push(check.value)
      })
  
      var matchedVariant = product.variants.find(variant => {
        var pass = true
  
        for(var i = 0; i < selectedOption.length; i++){
          if(selectedOption.indexOf(variant.options[i]) === -1){
            pass = false
            break
          }    
        }
        return pass
      })
  
      document.querySelector("#variant-id").value = matchedVariant.id
  
      var url = new URL(document.location.href)
      url.searchParams.set('variant', matchedVariant.id)
  
      window.history.replaceState(null, null, url.toString())
      document.querySelector('.product-price').textContent = Shopify.formatMoney(matchedVariant.price)
  
      document.querySelector('.product-image').setAttribute('src', matchedVariant.featured_image.src)
  
      var buttonAddToCart = document.querySelector('#button-add_to_cart')
  
      if(matchedVariant.available){
        buttonAddToCart.textContent = "{{'general.add_to_cart' | t}}"
        buttonAddToCart.disabled = false
      }
      else{
        buttonAddToCart.textContent = "{{'general.out_of_stock' | t}}"
        buttonAddToCart.disabled = true
      }
    })
  })
  
  var buttonAddToCart = document.querySelector('#button-add_to_cart')
  buttonAddToCart.addEventListener('click', addToCart)
  
  function addToCart(e) {
    e.preventDefault()
  
    var cartDrawer = document.getElementById("cart-drawer")
    var cartOverlay = document.getElementById('cart-overlay');
    
    cartDrawer.classList.toggle('open');
    cartOverlay.classList.toggle('open');
  
    var id = document.querySelector('#variant-id').value
    var quantity = document.querySelector('#product-quantity').value
  
    axios.post('/cart/add', {
        id,
        quantity
    })
    .then((value) => {
      axios.get('/cart.js')
      .then(value => {
        var cart = value.data
        var contentCart = document.querySelector('.cart-content')
        console.log(value.data)
  
        // var routeCheckout = {{ routes.cart_url | json }}
        // console.log(routeCheckout)
        var stringHTML = '<form action="/cart" method="post">'
  
        cart.items.forEach(item =>{
          var itemHtml = `<div class="product-grid">
              <img src=${item.image} width='100px' height='100px'>
              <div class="item-title">${item.title}</div>
              <div class="item-price">${item.price}</div>
              <input
                type="number"
                class="item-quantity"
                value=${item.quantity}
                onchange="updateProductQuantity(this, ${item.id})">
              <a href=${item.url_to_remove}>Remove</a>
            </div>`
  
          stringHTML += itemHtml
        })
  
        stringHTML += `
        <div class="cart-total">Total price: ${Shopify.formatMoney(cart.total_price)}</div>
        <input
          type="submit"
          name="checkout"
          value="Checkout">
        </form>`

        contentCart.innerHTML = stringHTML
      })
    })
    .catch(error => {
      console.log(error)
    })
  }
</script>

{% schema %}
  {
    "name": "product",
    "settings": [
      {
        "id": "product-name",
        "type": "text",
        "label": "Product's name"
      }, {
        "id": "product-price",
        "type": "number",
        "label": "Product's price"
      }
    ],
    "presets": [
      {
        "name": "product"
      }
    ]
  }
{% endschema %}